import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

void main() {
  runApp(NeoAgentApp());
}

class NeoAgentApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'NeoAgent',
      theme: ThemeData.dark().copyWith(
        primaryColor: Colors.blueAccent,
        scaffoldBackgroundColor: Colors.black,
      ),
      home: NeoAgentChatPage(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class NeoAgentChatPage extends StatefulWidget {
  @override
  _NeoAgentChatPageState createState() => _NeoAgentChatPageState();
}

class _NeoAgentChatPageState extends State<NeoAgentChatPage> {
  final TextEditingController _controller = TextEditingController();
  final List<_ChatMsg> _messages = [];

  void _sendPrompt() async {
    String prompt = _controller.text.trim();
    if (prompt.isEmpty) return;
    setState(() {
      _messages.add(_ChatMsg(prompt, isUser: true));
    });
    _controller.clear();

    // H√§r: PROMPTMOTORN tolkar och utf√∂r √•tg√§rder
    String aiResponse = await _processPrompt(prompt);

    setState(() {
      _messages.add(_ChatMsg(aiResponse, isUser: false));
    });
  }

  Future<String> _processPrompt(String prompt) async {
    prompt = prompt.toLowerCase();
    if (prompt.contains("√∂ppna google")) {
      final url = Uri.parse("https://www.google.com");
      if (await canLaunchUrl(url)) {
        await launchUrl(url);
        return "üåê Google √∂ppnades!";
      } else {
        return "‚ùå Kunde inte √∂ppna Google.";
      }
    }
    if (prompt.contains("√∂ppna kamera")) {
      // Kan kr√§va ytterligare plugins, men vi kan √∂ppna kamera-url p√• de flesta Android
      final url = Uri.parse("intent://capture/#Intent;scheme=android.media.action.IMAGE_CAPTURE;end");
      if (await canLaunchUrl(url)) {
        await launchUrl(url);
        return "üì∑ Kamera √∂ppnades!";
      } else {
        return "‚ùå Kunde inte √∂ppna kamera.";
      }
    }
    if (prompt.contains("s√∂k p√• youtube")) {
      final query = prompt.replaceAll("s√∂k p√• youtube", "").trim();
      final url = Uri.parse("https://www.youtube.com/results?search_query=${Uri.encodeComponent(query)}");
      if (await canLaunchUrl(url)) {
        await launchUrl(url);
        return "üîé YouTube-s√∂kning √∂ppnad f√∂r \"$query\"!";
      } else {
        return "‚ùå Kunde inte √∂ppna YouTube-s√∂kning.";
      }
    }
    if (prompt.contains("visa mina bilder")) {
      // √ñppnar Photos-appen om tillg√§nglig (kr√§ver r√§tt intent p√• Android)
      final url = Uri.parse("content://media/internal/images/media");
      if (await canLaunchUrl(url)) {
        await launchUrl(url);
        return "üñºÔ∏è Bilder √∂ppnade!";
      } else {
        return "‚ùå Kunde inte √∂ppna bilder.";
      }
    }
    // Fler kommandon? L√§gg till h√§r!
    if (prompt.contains("skapa agent")) {
      return
          "‚úÖ AI har tolkat din prompt och genererat en agent:\n\n```python\n# Auto-skapad agent enligt din prompt\n\ndef run():\n    print('Agenten k√∂rs!')\n\nif __name__ == '__main__':\n    run()\n```";
    }
    // Fallback ‚Äì h√§r kan du koppla GPT eller annan AI-backend!
    return "ü§ñ Rose: Din prompt √§r mottagen! L√§gg till fler √•tg√§rder eller koppla AI f√∂r full automation.";
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("NeoAgent Mobile ‚Äì Systemstyrning"),
        centerTitle: true,
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView.builder(
              padding: EdgeInsets.all(8),
              itemCount: _messages.length,
              itemBuilder: (context, idx) => _messages[idx],
            ),
          ),
          Divider(height: 1),
          Container(
            color: Colors.grey[900],
            child: Row(
              children: [
                Expanded(
                  child: TextField(
                    controller: _controller,
                    style: TextStyle(color: Colors.white),
                    decoration: InputDecoration(
                      hintText: "Skriv din prompt till AI-agenten...",
                      hintStyle: TextStyle(color: Colors.white38),
                      border: InputBorder.none,
                      contentPadding: EdgeInsets.all(16),
                    ),
                    onSubmitted: (_) => _sendPrompt(),
                  ),
                ),
                IconButton(
                  icon: Icon(Icons.send, color: Colors.blueAccent),
                  onPressed: _sendPrompt,
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

class _ChatMsg extends StatelessWidget {
  final String text;
  final bool isUser;

  _ChatMsg(this.text, {required this.isUser});

  @override
  Widget build(BuildContext context) {
    return Align(
      alignment: isUser ? Alignment.centerRight : Alignment.centerLeft,
      child: Container(
        margin: EdgeInsets.symmetric(vertical: 4, horizontal: 8),
        padding: EdgeInsets.all(12),
        decoration: BoxDecoration(
          color: isUser ? Colors.blueAccent.withOpacity(0.7) : Colors.grey[800],
          borderRadius: BorderRadius.circular(14),
        ),
        child: SelectableText(
          text,
          style: TextStyle(
            color: isUser ? Colors.white : Colors.limeAccent,
            fontSize: 15,
            fontFamily: 'monospace',
          ),
        ),
      ),
    );
  }
}
